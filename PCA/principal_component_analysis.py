# -*- coding: utf-8 -*-
"""Principal Component Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pa1-uIPMhjRua7LOdC6_8vY8dP0VazI5
"""

import pandas as pd
import numpy as np

np.set_printoptions(precision=4)

data = pd.read_csv('https://raw.githubusercontent.com/okyx/clustering/master/Iris.csv')

data.columns=['Id',0,1,2,3,'Species']

data

Y = data.pop('Species')
X = data[[0,1,2,3]]

X

"""normalisasi"""

X = (X-np.mean(X,axis=0))/np.std(X,axis=0)

X

"""compute cov"""

S = (1/X.shape[0]) * np.dot(X.T,X)

"""compute eigen"""

eigval , eigvec = np.linalg.eig(S)

sort_indices = np.argsort(eigval)[::-1]

eigvals = eigval[sort_indices]
eigvec = eigvec[:,sort_indices]

num_component=2
component = eigvec[:,:num_component]

"""compute transformation"""

transform = np.dot(X,component)

transform

import matplotlib.pyplot as plt

Y = Y.map({'Iris-setosa':1,'Iris-virginica':3,'Iris-versicolor':2})

plt.scatter(transform[:,0],transform[:,1],c=Y)

from sklearn.decomposition import PCA

pca = PCA(n_components=2)

transformsk = pca.fit_transform(X)

plt.scatter(transformsk[:,0],transformsk[:,1]*-1,c=Y)