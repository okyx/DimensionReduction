# -*- coding: utf-8 -*-
"""Linear Discriminant.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pVLpLHpyENEhJ5Tp0_EdWZk1_eHPIbEh
"""

import pandas as pd
import numpy as np

np.set_printoptions(precision=4)

data = pd.read_csv('https://raw.githubusercontent.com/okyx/clustering/master/Iris.csv')

data.columns=['Id',0,1,2,3,'Species']

data

data.Species = data.Species.map({'Iris-setosa':1,'Iris-virginica':3,'Iris-versicolor':2})

X = data.copy()

X

y = X.pop('Species')

y

X.pop('Id')

X = X.values

"""Mean per class"""

mean_vectors = []
for cl in range(1,4):
    mean_vectors.append(np.mean(X[y==cl], axis=0))
    print('Mean Vector class %s: %s\n' %(cl, mean_vectors[cl-1]))

mean_vectors

"""Scatter Within Class"""

S_W = np.zeros((4,4))
for i in range(1,4):
  withinClass = X[y==i]
  withInClassMinusMean = withinClass - np.array(mean_vectors[i-1])
  mat = np.dot(withInClassMinusMean.T,withInClassMinusMean)
  S_W = S_W + mat

S_W

"""Scatter Between Class"""

mean = np.mean(X,axis=0)
S_B = np.zeros((4,4))
mean = np.expand_dims(mean,1)
for index,i in enumerate(mean_vectors):
  n = X[y==index+1].shape[0]
  print(n)
  mean_vector = np.array(i).reshape(-1,1)
  between = mean_vector-mean
  S_B = S_B + n * np.dot(between,between.T)

S_B

"""Eigen"""

A = np.dot(np.linalg.inv(S_W),S_B)

eigval , eigvec = np.linalg.eig(A)

sort_indices = np.argsort(eigval)[::-1]

sort_indices

eigval,eigvec = eigval[sort_indices],eigvec[:,sort_indices]

eigvec

num_component = 2
component = eigvec[:,:num_component]

component

transform = np.dot(X,component)

transform.shape

transform

plt.scatter(transform[:,0],transform[:,1],c=y)

from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA

lda = LDA(n_components=2)

transformsk = lda.fit_transform(X,y)

plt.scatter(transformsk[:,0],transformsk[:,1]*-1,c=y)